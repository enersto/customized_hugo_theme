View(fattyAcids)
unique(fattyAcids$y)
data(oil)
fattyAcids <- merge(fattyAcids,oilType)
fattyAcids <- setDT(fattyAcids)[,y:=
recode(y,c("A", "B","C","D", "E", "F", "G"),
c("pumpkin","sunflower","peanut",
"olive","soybean","rapeseed","corn") )]
data(oil)
fattyAcids <- merge(fattyAcids,oilType)
fattyAcids <- setDT(fattyAcids)[,y:=
dplyr::recode(y,c("A", "B","C","D", "E", "F", "G"),
c("pumpkin","sunflower","peanut",
"olive","soybean","rapeseed","corn") )]
data(oil)
fattyAcids <- merge(fattyAcids,oilType)
fattyAcids <- setDT(fattyAcids)[,y:=
plyr::mapvalue(y,c("A", "B","C","D", "E", "F", "G"),
c("pumpkin","sunflower","peanut",
"olive","soybean","rapeseed","corn") )]
data(oil)
fattyAcids <- merge(fattyAcids,oilType)
fattyAcids <- setDT(fattyAcids)[,y:=
plyr::mapvalues(y,c("A", "B","C","D", "E", "F", "G"),
c("pumpkin","sunflower","peanut",
"olive","soybean","rapeseed","corn") )]
unique(fattyAcids$y)
set.seed(127)
inTraining <- createDataPartition(fattyAcids$y, p = .75, list = FALSE)
training <- fattyAcids[ inTraining,]
testing  <- fattyAcids[-inTraining,]
bootControl <- trainControl(number = 200)
set.seed(127)
svmFit <- train(y~., training,
method = "svmRadial",
tuneLength = 5,
preProc = c("center", "scale"),
trControl = bootControl,
scaled = FALSE)
data(oil)
fattyAcids <- merge(fattyAcids,oilType)
fattyAcids <- setDT(fattyAcids)[,y:=
plyr::mapvalues(y,c("A", "B","C","D", "E", "F", "G"),
c("pumpkin","sunflower","peanut",
"olive","soybean","rapeseed","corn") )]
set.seed(127)
inTraining <- createDataPartition(fattyAcids$y, p = .75, list = FALSE)
training <- fattyAcids[ inTraining,]
testing  <- fattyAcids[-inTraining,]
preProcValues <- preProcess(training, method = c("center", "scale"))
trainTransformed <- predict(preProcValues, training)
bootControl <- trainControl(number = 100)
set.seed(127)
svmFit <- train(y~., trainTransformed,
method = "svmRadial",
tuneLength = 5,
preProc = c("center", "scale"),
trControl = bootControl,
scaled = FALSE)
data(oil)
fattyAcids <- merge(fattyAcids,oilType)
fattyAcids <- setDT(fattyAcids)[,y:=
plyr::mapvalues(y,c("A", "B","C","D", "E", "F", "G"),
c("pumpkin","sunflower","peanut",
"olive","soybean","rapeseed","corn") )]
set.seed(127)
inTraining <- createDataPartition(fattyAcids$y, p = .75, list = FALSE)
training <- fattyAcids[ inTraining,]
testing  <- fattyAcids[-inTraining,]
preProcValues <- preProcess(training, method = c("center", "scale"))
trainTransformed <- predict(preProcValues, training)
bootControl <- trainControl(number = 100)
set.seed(127)
svmFit <- train(y~., trainTransformed,
method = "svmRadial",
tuneLength = 5,
trControl = bootControl,
scaled = FALSE)
length(oilType)
Desc(fattyAcids$y)
View(fattyAcids)
data(oil)
fattyAcids <- merge(fattyAcids,oilType)
oilType
data(oil)
fattyAcids <- cbind(fattyAcids,oilType)
View(fattyAcids)
fattyAcids <- setDT(fattyAcids)[,y:=
plyr::mapvalues(y,c("A", "B","C","D", "E", "F", "G"),
c("pumpkin","sunflower","peanut",
"olive","soybean","rapeseed","corn") )]
View(fattyAcids)
data(oil)
fattyAcids <- cbind(fattyAcids,oilType)
fattyAcids <- setDT(fattyAcids)[,oilType:=
plyr::mapvalues(oilType,c("A", "B","C","D", "E", "F", "G"),
c("pumpkin","sunflower","peanut",
"olive","soybean","rapeseed","corn") )]
Desc(fattyAcids$oilType)
set.seed(127)
inTraining <- createDataPartition(fattyAcids$oilType, p = .75, list = FALSE)
training <- fattyAcids[ inTraining,]
testing  <- fattyAcids[-inTraining,]
Desc(training$oilType)
bootControl <- trainControl(number = 100)
set.seed(127)
svmFit <- train(oilType~., training,
method = "svmRadial",
tuneLength = 5,
preProc = c("center", "scale"),
trControl = bootControl,
scaled = FALSE)
svmFit
svmFit$finalModel
svmType <- predict(svmFit, newdata = testing)
confusionMatrix(data = svmType, testing$oilType)
svmType
testing$oilType
gbmGrid <- expand.grid(.interaction.depth = (1:5) * 2,
.n.trees = (1:10)*25, .shrinkage = .1)
gbmFit <- train(oilType ~., training,
method = "gbm", trControl = bootControl, verbose = FALSE,preProc = c("center", "scale"),
bag.fraction = 0.5, tuneGrid = gbmGrid)
varImp(svmFit$finalModel)
varImp(svmFit)
svmImp <- varImp(svmFit, scale = FALSE)
plot(simImp)
svmImp <- varImp(svmFit, scale = FALSE)
plot(simImp)
plot(svmImp)
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop("1587417567384")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop("140518633161048")
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
save.image("F:/Schrift/hugo/customized_hugo_theme/.RData")
knitr::opts_chunk$set(echo = TRUE)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
library(data.table)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,loan_condition :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"Bad_Loan","Good_Loan")]
blogdown:::new_post_addin()
Sys.getlocale()
loan = fread("https://www.kaggle.com/wendykan/lending-club-loan-data#loan.csv")
library(data.table)
library(scorecard)
library(caret)
loan = fread("https://www.kaggle.com/wendykan/lending-club-loan-data#loan.csv")
View(loan)
temp <- var_filter(loan)
names(loan)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
names(loan)
View(loan)
loan <- loan[,loan_condition :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"Bad_Loan","Good_Loan")]
Desc(loan$loan_condition)
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
Desc(loan$loan_condition)
temp <- var_filter(loan,y = "loan_condition")
loan <- loan[,loan_condition :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"Bad_Loan","Good_Loan")]
loan <- loan[,loan_condition:= factor(loan_condition,levels = c("Good_Loan","Bad_Loan"))]
Desc(loan$loan_condition)
temp <- var_filter(loan,y = "loan_condition")
loan <- loan[,loan_condition :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,loan_condition:= factor(loan_condition,levels = c("good","bad"))]
Desc(loan$loan_condition)
temp <- var_filter(loan,y = "loan_condition")
names(temp)
names(loan)
names(loan)
names(temp)
Desc(loan$emp_length)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,loan_condition :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,loan_condition:= factor(loan_condition,levels = c("good","bad"))]
Desc(emp_length~loan_condition,loan)
names(loan)
names(temp)
Desc(loan$purpose)
names(loan)
names(temp)
loan_selected <- var_filter(loan,y = "loan_condition")
Desc(loan$loan_status)
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
dev.off()
Desc(loan$loan_status)
loan <- loan[,y :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,y := factor(y,levels = c("good","bad"))]
Desc(loan$y)
loan_selected <- loan[,c("loan_status","loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","loan_condition")]
loan_selected <- loan[,c("loan_status","loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_selected <- var_filter(loan_selected,y = "y")
names(loan_selected)
Desc(loan$emp_length)
Desc(emp_length ~ y,loan)
Desc(emp_length ~ y,loan)
ivs <- iv(loan, y = "y")
loan_selected <- loan[,c("loan_status","loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
ivs <- iv(loan_selected, y = "y")
View(ivs)
View(loan_selected)
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_selected <- var_filter(loan_selected,y = "y")
loan_selected <- loan[,c("loan_status","loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
ivs <- iv(loan_selected, y = "y")
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
Desc(emp_length ~ y,loan_selected)
ivs <- iv(loan_selected, y = "y")
View(ivs)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,y :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,y := factor(y,levels = c("good","bad"))]
Desc(loan$y)
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
ivs <- iv(loan_selected, y = "y")
View(ivs)
ivs[variable=="emp_length",]
bin <- woebin(loan_m, y = "y")
View(bin)
bin$dti
woebin_plot(bin$loan_amnt)
names(loan_m)
woebin_plot(bin$purpose)
ivs
woebin_plot(bin$grade)
woebin_plot(bin$term)
woebin_plot(bin$home_ownership)
bin$dti
bin$annual_inc
woebin_plot(bin$annual_inc)
bin <- woebin(loan_m, y = "y",method = "chimerge")
#分箱和具体的切分情况
bin$annual_inc
#scorecard包有具体的展示分享状况的绘图工具：
woebin_plot(bin$annual_inc)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$Species)[[1]][["freq"]])
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
Desc(loan_mTrain$Species)[[1]][["freq"]]
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
knitr::kable(Desc(loan$y)[[1]][["freq"]])
install.packages("h2o")
library(h2o)
woebin_plot(bin$annual_inc)
woebin_plot(bin$int_rate)
woebin_plot(bin$dti)
woebin_plot(bin$purpose)
bin$purpose
woebin_plot(bin$term)
woebin_plot(bin$annual_inc)
woebin_plot(bin$home_ownership)
woebin_plot(bin$grade)
woebin_plot(bin$loan_amnt)
Desc(loan_m$loan_amnt)
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
break_adj = list(
loan_amnt=c(8500,12000,15500,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bin$loan_amnt)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,12000,16500,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,12000,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,12000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
View(train_woe)
localH2O = h2o.init()
train_h2o = as.h2o(train_woe)
fit = h2o.glm(y="y", training_frame=train_h2o,
family="binomial", nfolds=0, alpha=1, lambda_search=TRUE) # summary(fit)
View(fit)
summary(fit)
View(train_h2o)
train_h2o
h2o.varimp(fit)
data.table(h2o.varimp(fit))[names!=""][!is.na(coefficients) & coefficients > 0 & sign == "POS"]
library(data.table)
varimp = data.table(h2o.varimp(fit))[names!=""][!is.na(coefficients) & coefficients > 0]
var_sel3 = c(varimp$names, "y")
var_sel3
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,y :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,y := factor(y,levels = c("good","bad"))]
knitr::kable(Desc(loan$y)[[1]][["freq"]])
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
bin <- woebin(loan_m, y = "y",method = "chimerge")
#分箱和具体的切分情况
bin$annual_inc
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
# glm ------
m1 = glm( y ~ ., family = "binomial", data = train_woe)
# summary(m1)
# Select a formula-based model by AIC
m_step = step(m1, direction="both", trace = FALSE)
m2 = eval(m_step$call)
summary(m2)$coefficients
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,y :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,y := factor(y,levels = c("good","bad"))]
knitr::kable(Desc(loan$y)[[1]][["freq"]])
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
bin <- woebin(loan_m, y = "y",method = "chimerge")
#分箱和具体的切分情况
bin$annual_inc
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
fitControl <- trainControl(
method = "cv",
number = 10,
savePredictions = TRUE
)
m_glm= train( y ~ ., data=train_woe,method="glm",family="binomial",
trControl=fitControl)
summary(m_glm)
m1 = glm( y ~ ., family = "binomial", data = train_woe)
summary(m_glm)
summary(m1)
m_glm= train( y ~ ., data=train_woe,method="glm",family="binomial")
