loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
ivs <- iv(loan_selected, y = "y")
View(ivs)
ivs[variable=="emp_length",]
bin <- woebin(loan_m, y = "y")
View(bin)
bin$dti
woebin_plot(bin$loan_amnt)
names(loan_m)
woebin_plot(bin$purpose)
ivs
woebin_plot(bin$grade)
woebin_plot(bin$term)
woebin_plot(bin$home_ownership)
bin$dti
bin$annual_inc
woebin_plot(bin$annual_inc)
bin <- woebin(loan_m, y = "y",method = "chimerge")
#分箱和具体的切分情况
bin$annual_inc
#scorecard包有具体的展示分享状况的绘图工具：
woebin_plot(bin$annual_inc)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$Species)[[1]][["freq"]])
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
Desc(loan_mTrain$Species)[[1]][["freq"]]
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
knitr::kable(Desc(loan$y)[[1]][["freq"]])
install.packages("h2o")
library(h2o)
woebin_plot(bin$annual_inc)
woebin_plot(bin$int_rate)
woebin_plot(bin$dti)
woebin_plot(bin$purpose)
bin$purpose
woebin_plot(bin$term)
woebin_plot(bin$annual_inc)
woebin_plot(bin$home_ownership)
woebin_plot(bin$grade)
woebin_plot(bin$loan_amnt)
Desc(loan_m$loan_amnt)
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
break_adj = list(
loan_amnt=c(8500,12000,15500,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bin$loan_amnt)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,12000,16500,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,12000,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,12000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
View(train_woe)
localH2O = h2o.init()
train_h2o = as.h2o(train_woe)
fit = h2o.glm(y="y", training_frame=train_h2o,
family="binomial", nfolds=0, alpha=1, lambda_search=TRUE) # summary(fit)
View(fit)
summary(fit)
View(train_h2o)
train_h2o
h2o.varimp(fit)
data.table(h2o.varimp(fit))[names!=""][!is.na(coefficients) & coefficients > 0 & sign == "POS"]
library(data.table)
varimp = data.table(h2o.varimp(fit))[names!=""][!is.na(coefficients) & coefficients > 0]
var_sel3 = c(varimp$names, "y")
var_sel3
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,y :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,y := factor(y,levels = c("good","bad"))]
knitr::kable(Desc(loan$y)[[1]][["freq"]])
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
bin <- woebin(loan_m, y = "y",method = "chimerge")
#分箱和具体的切分情况
bin$annual_inc
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
# glm ------
m1 = glm( y ~ ., family = "binomial", data = train_woe)
# summary(m1)
# Select a formula-based model by AIC
m_step = step(m1, direction="both", trace = FALSE)
m2 = eval(m_step$call)
summary(m2)$coefficients
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,y :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,y := factor(y,levels = c("good","bad"))]
knitr::kable(Desc(loan$y)[[1]][["freq"]])
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
bin <- woebin(loan_m, y = "y",method = "chimerge")
#分箱和具体的切分情况
bin$annual_inc
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
fitControl <- trainControl(
method = "cv",
number = 10,
savePredictions = TRUE
)
m_glm= train( y ~ ., data=train_woe,method="glm",family="binomial",
trControl=fitControl)
summary(m_glm)
m1 = glm( y ~ ., family = "binomial", data = train_woe)
summary(m_glm)
summary(m1)
m_glm= train( y ~ ., data=train_woe,method="glm",family="binomial")
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,y :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,y := factor(y,levels = c("good","bad"))]
knitr::kable(Desc(loan$y)[[1]][["freq"]])
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
bin <- woebin(loan_m, y = "y",method = "chimerge")
#分箱和具体的切分情况
bin$annual_inc
woebin_plot(bin$loan_amnt)
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_m, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_m$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_m[ trainIndex,]
loan_mTest  <- loan_m[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
floor(sqrt(ncol(train_woe)))
mtry <- floor(sqrt(ncol(train_woe)))
expand.grid(.mtry=mtry)
fitControl <- trainControl(## 10-fold CV
method = "cv",
number = 10,
savePredictions = TRUE
)
# glm
m_glm= train( y ~ ., data=train_woe,method="glm",family="binomial",
trControl=fitControl)
# random forest
mtry <- floor(sqrt(ncol(train_woe)))
tunegrid <- expand.grid(.mtry=mtry)
rf_glm= train( y ~ ., data=train_woe,method="rf",metric="Accuracy",
tuneGrid=tunegrid,
trControl=fitControl)
View(m_glm)
rf_glm= train( y ~ ., data=train_woe,method="rf",
trControl=fitControl)
class(train_woe$y)
View(train_woe)
rf_glm= train( as.factor(y) ~ ., data=train_woe,method="rf",
trControl=fitControl)
library(randomForest)
m_rf <- randomForest(y ~ ., data = train_woe)
m_rf <- randomForest(as.factor(y) ~ ., data = train_woe)
memory.limit()
m_rf <-  train( as.factor(y) ~ ., data=train_woe,method="ranger",
trControl=fitControl)
library(data.table)
library(scorecard)
library(caret)
library(DescTools)
options(scipen = 8)
loan = fread("C:/Users/pauke/Downloads/loan.csv")
loan <- loan[,y :=
ifelse(loan_status %in% c("Charged Off", "Default",
"Does not meet the credit policy. Status:Charged Off",
"In Grace Period","Late (16-30 days)",
"Late (31-120 days)"),"bad","good")]
loan <- loan[,y := factor(y,levels = c("good","bad"))]
knitr::kable(Desc(loan$y)[[1]][["freq"]])
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","grade","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
trainIndex <- createDataPartition(loan_m$y, p = .13,
list = FALSE,
times = 1)
loan_mp <- loan_m[trainIndex,]
bin <- woebin(loan_mp, y = "y",method = "chimerge")
#分箱和具体的切分情况示例
bin$annual_inc
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_mp, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_mp$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_mp[ trainIndex,]
loan_mTest  <- loan_mp[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
trainIndex <- createDataPartition(loan_m$y, p = .15,
list = FALSE,
times = 1)
loan_mp <- loan_m[trainIndex,]
bin <- woebin(loan_mp, y = "y",method = "chimerge")
#分箱和具体的切分情况示例
bin$annual_inc
woebin_plot(bin$loan_amnt)
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_mp, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_mp$y, p = .8,
list = FALSE,
times = 1)
loan_mTrain <- loan_mp[ trainIndex,]
loan_mTest  <- loan_mp[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
names(loan)
Desc(loan$pymnt_plan)
names(loan)
Desc(loan$grade)
View(loan_mTrain)
library(corrplot)
cor1 = cor(train_woe)
corrplot.mixed(cor1,  number.cex = .7)
cor1 = cor(train_woe)
corrplot.mixed(cor1,  number.cex = .7)
names(loan)
Desc(loan$open_acc)
Desc(loan$hardship_flag)
names(loan)
Desc(loan$total_acc)
Desc(loan$delinq_2yrs)
Desc(loan$delinq_amnt)
Desc(loan$delinq_2yrs)
Desc(delinq_2yrs ~ y,loan)
Desc(open_acc ~ y,loan)
Desc(mort_acc ~ y,loan)
names(loan)
Desc(out_prncp ~ y,loan)
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","open_acc","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
View(ivs)
trainIndex <- createDataPartition(loan_m$y, p = .15,
list = FALSE,
times = 1)
loan_mp <- loan_m[trainIndex,]
bin <- woebin(loan_mp, y = "y",method = "chimerge")
#分箱和具体的切分情况示例
bin$annual_inc
woebin_plot(bin$loan_amnt)
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_mp, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_mp$y, p = .85,
list = FALSE,
times = 1)
loan_mTrain <- loan_mp[ trainIndex,]
loan_mTest  <- loan_mp[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
cor1 = cor(train_woe)
corrplot.mixed(cor1,  number.cex = .7)
View(loan_mp)
View(loan_mp)
View(loan_m)
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","open_acc","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_selected)
names(loan_m)
Desc(revol_bal ~ y,loan)
loan_selected <- loan[,c("loan_amnt","int_rate","dti",
"purpose","term","annual_inc","home_ownership","emp_length","revol_bal","y")]
loan_m <- var_filter(loan_selected,y = "y")
names(loan_m)
Desc(loan_selected$emp_length)
ivs <- iv(loan_selected, y = "y")
ivs[variable=="emp_length",]
View(ivs)
trainIndex <- createDataPartition(loan_m$y, p = .15,
list = FALSE,
times = 1)
loan_mp <- loan_m[trainIndex,]
bin <- woebin(loan_mp, y = "y",method = "chimerge")
#分箱和具体的切分情况示例
bin$annual_inc
break_adj = list(
loan_amnt=c(8500,14000,20500))
bins_adj = woebin(
loan_mp, y="y",
breaks_list=break_adj,
print_step=0)
woebin_plot(bins_adj$loan_amnt)
set.seed(6715)
trainIndex <- createDataPartition(loan_mp$y, p = .85,
list = FALSE,
times = 1)
loan_mTrain <- loan_mp[ trainIndex,]
loan_mTest  <- loan_mp[-trainIndex,]
knitr::kable(Desc(loan_mTrain$y)[[1]][["freq"]])
train_woe = woebin_ply(
loan_mTrain, bins_adj)
test_woe = woebin_ply(
loan_mTest, bins_adj)
cor1 = cor(train_woe)
corrplot.mixed(cor1,  number.cex = .7)
Desc(acc_now_delinq ~ y,loan)
names(loan)
Desc(out_prncp ~ y,loan)
fitControl <- trainControl(method='cv', number=3,
summaryFunction = twoClassSummary, classProbs = TRUE)
# 1,0的y值模式在caret里无法进行
train_woe <- train_woe[,y := ifelse(y ==1,"good","bad")]
test_woe <- test_woe[,y := ifelse(y ==1,"good","bad")]
# glm
m_glm <- train(y ~ ., data=train_woe,method="glm",family="binomial",
trControl=fitControl,metric = "ROC")
summary(m_glm)
# gbm (Gradient Boosting Machine)
m_gbm <- train(y ~ ., data=train_woe,method="gbm",
trControl=fitControl,metric = "ROC")
summary(m_gbm)
m_gbm
result <- resamples(list(glm = m_glm,gbm = m_gbm))
result$values
bwplot(result, metric="Sens")
bwplot(result, metric="ROC")
View(train_woe)
rfGrid <- expand.grid(mtry = seq(from = 3, to = 18, by = 3))
rfControl <- trainControl(method = "cv", number = 3, repeats = 2,
classProbs = TRUE, summaryFunction = twoClassSummary)
m_rf <- train(train_woe[,-1], train_woe$y,
method="rf",
ntree=100,
importance=TRUE,
na.action=na.omit,
tuneGrid = rfGrid,
trControl= rfControl,
metric = "Sens",
allowParallel=TRUE)
summary(m_rf)
result <- resamples(list(glm = m_glm,gbm = m_rf))
bwplot(result, metric="Sens")
result <- resamples(list(glm = m_glm,rf = m_rf))
result$values
bwplot(result, metric="Sens")
bwplot(result, metric="ROC"
install.packages("psych")
