options(scipen=8)
library(data.table)
library(anytime)
library(kableExtra)
dt <- fread("~/Desktop/NeuerArbeit/CDNOW_master.txt")
setnames(dt,c("id","date","numberOfBuying","amount"))
dt <-  dt[,date := anydate(date)]
knitr::kable(dt[sample(.N,6)])
library(DescTools)
plot(Desc(dt$date)[[1]][["freq"]][,1:2])
####################数据准备函数
require(data.table)
getDataFrame <- function(dt,startDate,endDate,id="id",date="date",amount="amount"){
newdt <- setDT(dt)[date >= startDate & date <= endDate,][order(-date)]
#选取每个人最近的交易时间
dateRecency <- newdt[,Recency:= endDate - date][newdt[, .I[Recency == min(Recency)],
by = id]$V1][,c(1:2,5)]
dateRecency <- unique(dateRecency)
#汇总每个人的交易次数
newdt <- newdt[,.(Frequency= .N,Monetary = sum(amount)), by = id]
#合并最终数据
newdt <- dateRecency[newdt,on = id]
return(newdt)
}
# 设置历史时间段
startDate_history <- as.Date("1997-01-01")
endDate_history <- as.Date("1998-02-28")
#  设置预测时间段
startDate_forcast <- as.Date("1998-03-01")
endDate_forcast <- as.Date("1998-04-30")
## 历史数据转制
history <- getDataFrame(dt,startDate_history,endDate_history)
## 预测数据转制
forcast <- getDataFrame(dt,startDate_forcast,endDate_forcast)
# 将购买周期设定为60天/每周期，以便将Recency离散化
history <- history[,Recency:= as.numeric(Recency)][,Recency := Recency%/% 60]
# 将用户消费金额Monetary以$10的方式离散化
breaks<-seq(0,round(max(history$Monetary)+9),by=10)
history <- history[,Monetary := as.numeric(cut(Monetary,breaks,labels=FALSE))]
#为RFM模型添加一个是否购买的字段
history <- history[,Buy:= ifelse(id %in% forcast$id,1,0)]
train<-history
####################RFM购买概率函数
require(data.table)
getPercentages <- function(dt,colNames){
Var<-c(colNames,"Buy")
a <- dt[,..Var]
a <- a[,.(account = .N),by = Var][,Percentage := prop.table(account), by = colNames]
b <- a[Buy == 1, -3][,-2]
return(b)
}
colNames<-c("Monetary")
p<-getPercentages(train,colNames)
View(p)
View(p)
View(p)
